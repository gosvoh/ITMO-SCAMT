// This file was auto-generated by ML.NET Model Builder. 

using System;
using ML.Model;

namespace ML.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                Eye_Left_Blink = 1F,
                Eye_Left_Wide = 0F,
                Eye_Left_Right = 0F,
                Eye_Left_Left = 0.2245874F,
                Eye_Left_Up = 0F,
                Eye_Left_Down = 0F,
                Eye_Right_Blink = 1F,
                Eye_Right_Wide = 0F,
                Eye_Right_Right = 0F,
                Eye_Right_Left = 0.2245874F,
                Eye_Right_Up = 0F,
                Eye_Right_Down = 0F,
                Eye_Frown = 0F,
                Eye_Left_Squeeze = 0F,
                Eye_Right_Squeeze = 0F,
                Max = 0F,
                None = 0F,
                L_pupil_diameter = 3.556702F,
                R_pupil_diameter = 3.833588F,
                Jaw_Right = 0F,
                Jaw_Left = 0.2632145F,
                Jaw_Forward = 0F,
                Jaw_Open = 0.002890927F,
                Mouth_Ape_Shape = 0F,
                Mouth_Upper_Right = 0F,
                Mouth_Upper_Left = 0.1567701F,
                Mouth_Lower_Right = 0F,
                Mouth_Lower_Left = 0.2275358F,
                Mouth_Upper_Overturn = 0F,
                Mouth_Lower_Overturn = 0F,
                Mouth_Pout = 0F,
                Mouth_Smile_Right = 0F,
                Mouth_Smile_Left = 0F,
                Mouth_Sad_Right = 0F,
                Mouth_Sad_Left = 0F,
                Cheek_Puff_Right = 0F,
                Cheek_Puff_Left = 0F,
                Cheek_Suck = 0.1374295F,
                Mouth_Upper_UpRight = 0F,
                Mouth_Upper_UpLeft = 0F,
                Mouth_Lower_DownRight = 0F,
                Mouth_Lower_DownLeft = 0F,
                Mouth_Upper_Inside = 0F,
                Mouth_Lower_Inside = 0F,
                Mouth_Lower_Overlay = 0F,
                Tongue_LongStep1 = 3.666806E-38F,
                Tongue_Left = 0F,
                Tongue_Right = 0F,
                Tongue_Up = 0F,
                Tongue_Down = 0F,
                Tongue_Roll = 0F,
                Tongue_LongStep2 = 0F,
                Tongue_UpRight_Morph = 0F,
                Tongue_UpLeft_Morph = 0F,
                Tongue_DownRight_Morph = 0F,
                Tongue_DownLeft_Morph = 0F,
            };

            ModelBuilder.CreateModel();

            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Emotion with predicted Emotion from sample data...\n\n");
            Console.WriteLine($"Eye_Left_Blink: {sampleData.Eye_Left_Blink}");
            Console.WriteLine($"Eye_Left_Wide: {sampleData.Eye_Left_Wide}");
            Console.WriteLine($"Eye_Left_Right: {sampleData.Eye_Left_Right}");
            Console.WriteLine($"Eye_Left_Left: {sampleData.Eye_Left_Left}");
            Console.WriteLine($"Eye_Left_Up: {sampleData.Eye_Left_Up}");
            Console.WriteLine($"Eye_Left_Down: {sampleData.Eye_Left_Down}");
            Console.WriteLine($"Eye_Right_Blink: {sampleData.Eye_Right_Blink}");
            Console.WriteLine($"Eye_Right_Wide: {sampleData.Eye_Right_Wide}");
            Console.WriteLine($"Eye_Right_Right: {sampleData.Eye_Right_Right}");
            Console.WriteLine($"Eye_Right_Left: {sampleData.Eye_Right_Left}");
            Console.WriteLine($"Eye_Right_Up: {sampleData.Eye_Right_Up}");
            Console.WriteLine($"Eye_Right_Down: {sampleData.Eye_Right_Down}");
            Console.WriteLine($"Eye_Frown: {sampleData.Eye_Frown}");
            Console.WriteLine($"Eye_Left_Squeeze: {sampleData.Eye_Left_Squeeze}");
            Console.WriteLine($"Eye_Right_Squeeze: {sampleData.Eye_Right_Squeeze}");
            Console.WriteLine($"Max: {sampleData.Max}");
            Console.WriteLine($"None: {sampleData.None}");
            Console.WriteLine($"L_pupil_diameter: {sampleData.L_pupil_diameter}");
            Console.WriteLine($"R_pupil_diameter: {sampleData.R_pupil_diameter}");
            Console.WriteLine($"Jaw_Right: {sampleData.Jaw_Right}");
            Console.WriteLine($"Jaw_Left: {sampleData.Jaw_Left}");
            Console.WriteLine($"Jaw_Forward: {sampleData.Jaw_Forward}");
            Console.WriteLine($"Jaw_Open: {sampleData.Jaw_Open}");
            Console.WriteLine($"Mouth_Ape_Shape: {sampleData.Mouth_Ape_Shape}");
            Console.WriteLine($"Mouth_Upper_Right: {sampleData.Mouth_Upper_Right}");
            Console.WriteLine($"Mouth_Upper_Left: {sampleData.Mouth_Upper_Left}");
            Console.WriteLine($"Mouth_Lower_Right: {sampleData.Mouth_Lower_Right}");
            Console.WriteLine($"Mouth_Lower_Left: {sampleData.Mouth_Lower_Left}");
            Console.WriteLine($"Mouth_Upper_Overturn: {sampleData.Mouth_Upper_Overturn}");
            Console.WriteLine($"Mouth_Lower_Overturn: {sampleData.Mouth_Lower_Overturn}");
            Console.WriteLine($"Mouth_Pout: {sampleData.Mouth_Pout}");
            Console.WriteLine($"Mouth_Smile_Right: {sampleData.Mouth_Smile_Right}");
            Console.WriteLine($"Mouth_Smile_Left: {sampleData.Mouth_Smile_Left}");
            Console.WriteLine($"Mouth_Sad_Right: {sampleData.Mouth_Sad_Right}");
            Console.WriteLine($"Mouth_Sad_Left: {sampleData.Mouth_Sad_Left}");
            Console.WriteLine($"Cheek_Puff_Right: {sampleData.Cheek_Puff_Right}");
            Console.WriteLine($"Cheek_Puff_Left: {sampleData.Cheek_Puff_Left}");
            Console.WriteLine($"Cheek_Suck: {sampleData.Cheek_Suck}");
            Console.WriteLine($"Mouth_Upper_UpRight: {sampleData.Mouth_Upper_UpRight}");
            Console.WriteLine($"Mouth_Upper_UpLeft: {sampleData.Mouth_Upper_UpLeft}");
            Console.WriteLine($"Mouth_Lower_DownRight: {sampleData.Mouth_Lower_DownRight}");
            Console.WriteLine($"Mouth_Lower_DownLeft: {sampleData.Mouth_Lower_DownLeft}");
            Console.WriteLine($"Mouth_Upper_Inside: {sampleData.Mouth_Upper_Inside}");
            Console.WriteLine($"Mouth_Lower_Inside: {sampleData.Mouth_Lower_Inside}");
            Console.WriteLine($"Mouth_Lower_Overlay: {sampleData.Mouth_Lower_Overlay}");
            Console.WriteLine($"Tongue_LongStep1: {sampleData.Tongue_LongStep1}");
            Console.WriteLine($"Tongue_Left: {sampleData.Tongue_Left}");
            Console.WriteLine($"Tongue_Right: {sampleData.Tongue_Right}");
            Console.WriteLine($"Tongue_Up: {sampleData.Tongue_Up}");
            Console.WriteLine($"Tongue_Down: {sampleData.Tongue_Down}");
            Console.WriteLine($"Tongue_Roll: {sampleData.Tongue_Roll}");
            Console.WriteLine($"Tongue_LongStep2: {sampleData.Tongue_LongStep2}");
            Console.WriteLine($"Tongue_UpRight_Morph: {sampleData.Tongue_UpRight_Morph}");
            Console.WriteLine($"Tongue_UpLeft_Morph: {sampleData.Tongue_UpLeft_Morph}");
            Console.WriteLine($"Tongue_DownRight_Morph: {sampleData.Tongue_DownRight_Morph}");
            Console.WriteLine($"Tongue_DownLeft_Morph: {sampleData.Tongue_DownLeft_Morph}");
            Console.WriteLine($"\n\nPredicted Emotion value {predictionResult.PredictedLabel} \nPredicted Emotion scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
